<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raynodes.github.io/news/article-37617.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>使用 docker-compose 部署 golang 的 Athens 私有代理</title>
        <meta name="description" content="go中私有代理搭建  前言 为什么选择 athens 使用 docker-compose 部署  配置私有仓库的认证信息 配置下载模式 部署 使用秘钥的方式认证私有仓库  1、配置秘钥 2、配置 HT" />
        <link rel="icon" href="/assets/website/img/v2raynodes/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2rayNodes节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raynodes.github.io/news/article-37617.htm" />
    <meta property="og:site_name" content="V2rayNodes节点订阅站" />
    <meta property="og:title" content="使用 docker-compose 部署 golang 的 Athens 私有代理" />
    <meta property="og:image" content="https://v2raynodes.github.io/uploads/20240603/6f6a46e79e78f31e7e0e959868ad17eb.webp" />
        <meta property="og:release_date" content="2025-01-08T10:01:42" />
    <meta property="og:updated_time" content="2025-01-08T10:01:42" />
        <meta property="og:description" content="go中私有代理搭建  前言 为什么选择 athens 使用 docker-compose 部署  配置私有仓库的认证信息 配置下载模式 部署 使用秘钥的方式认证私有仓库  1、配置秘钥 2、配置 HT" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="使用 docker-compose 部署 golang 的 Athens 私有代理">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Dosis:300,400,500,,600,700,700i|Lato:300,300i,400,400i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/v2raynodes/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raynodes/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raynodes/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raynodes/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/v2raynodes/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/v2raynodes/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Q31DFYB8XJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Q31DFYB8XJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top">
        <div class="container d-flex align-items-center justify-content-between">
            <a href="/" class="logo">
                        <span>V2ray Nodes</span>
                        </a>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section id="breadcrumbs" class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>使用 docker-compose 部署 golang 的 Athens 私有代理</h1>
                </div>
                <div>
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<ul> <li><a href="#go%E4%B8%AD%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86%E6%90%AD%E5%BB%BA" rel="nofollow">go中私有代理搭建</a> <ul> <li><a href="#%E5%89%8D%E8%A8%80" rel="nofollow">前言</a></li> <li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9-athens" rel="nofollow">为什么选择 athens</a></li> <li><a href="#%E4%BD%BF%E7%94%A8-docker-compose-%E9%83%A8%E7%BD%B2" rel="nofollow">使用 docker-compose 部署</a> <ul> <li><a href="#%E9%85%8D%E7%BD%AE%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E7%9A%84%E8%AE%A4%E8%AF%81%E4%BF%A1%E6%81%AF" rel="nofollow">配置私有仓库的认证信息</a></li> <li><a href="#%E9%85%8D%E7%BD%AE%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%BC%8F" rel="nofollow">配置下载模式</a></li> <li><a href="#%E9%83%A8%E7%BD%B2" rel="nofollow">部署</a></li> <li><a href="#%E4%BD%BF%E7%94%A8%E7%A7%98%E9%92%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%A4%E8%AF%81%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93" rel="nofollow">使用秘钥的方式认证私有仓库</a> <ul> <li><a href="#1%E9%85%8D%E7%BD%AE%E7%A7%98%E9%92%A5" rel="nofollow">1、配置秘钥</a></li> <li><a href="#2%E9%85%8D%E7%BD%AE-http-%E4%B8%8E-ssh-%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99" rel="nofollow">2、配置 HTTP 与 SSH 重写规则</a></li> <li><a href="#3%E9%85%8D%E7%BD%AE-ssh-%E6%9D%A5%E7%BB%95%E8%BF%87%E4%B8%BB%E6%9C%BA-ssh-%E9%94%AE%E9%AA%8C%E8%AF%81" rel="nofollow">3、配置 SSH 来绕过主机 SSH 键验证</a></li> </ul> </li> </ul> </li> <li><a href="#%E5%8F%82%E8%80%83" rel="nofollow">参考</a></li> </ul> </li> </ul> <h2 id="go中私有代理搭建">go中私有代理搭建</h2> <h3 id="前言">前言</h3> <p>最近公司的代理出现问题了，刚好借这个机会来学习下，athens 如何构建私有代理</p> <h3 id="为什么选择-athens">为什么选择 athens</h3> <p>私有化代理的选取标准无非就是下面的几点</p> <p>1、托管私有模块；</p> <p>2、排除对公有模块的访问；</p> <p>3、存储公有模块；</p> <p><strong>athens 的特点：</strong></p> <p>Athens 首先可以配置访问私有仓库；</p> <p>Athens 的会存储每次拉取的包，如果该模块之前没有通过 athens，athens 会向目标地址请求数据，在返回给客户端的时候，会存储该模块到存储中，这样实现了<code>go mod download</code>永远只会发生一次；</p> <p>Athens 处理存储的策略为仅追加，一个模块被保存，它就永远不会改变，即使开发人员对 tag 进行了强推，那么也不会被删除；</p> <p>Athens 也可以配置下载策略，过滤一些有安全隐患的包。</p> <p>Athens 支持 disk, mongo, gcs, s3, minio, 外部存储/自定义，不过一般建议使用 disk。</p> <h3 id="使用-docker-compose-部署">使用 docker-compose 部署</h3> <p>官方网站已经，提供了通过 docker 和 二进制部署的方案，这里秉着好记性不如烂笔头的原则，这里自己也做了记录</p> <h4 id="配置私有仓库的认证信息">配置私有仓库的认证信息</h4> <p>通过<code>.netrc</code> 文件来配置，里面可以放自己的私有仓库的地址，以及用户，密码认证信息</p> <pre><code># cat .netrc machine gitlab.test.com login test-name password test-pass</code></pre> <p>有几个私有仓库，配置几个就可以了</p> <h4 id="配置下载模式">配置下载模式</h4> <p>通过<code>The download mode</code> (下载模式配置策略)是现在 ATHENS 中比较推崇的，之前通过<code>Filtering modules</code>（过滤模式）的方法，目前已经被弃用了。</p> <p>来看下如何配置</p> <pre><code># DownloadMode defines how Athens behaves when a module@version # is not found in storage. There are 4 options: # 1. "sync" (default): download the module synchronously and # return the results to the client. # 2. "async": return 404, but asynchronously store the module # in the storage backend. # 3. "redirect": return a 301 redirect status to the client # with the base URL as the DownloadRedirectURL from below. # 4. "async_redirect": same as option number 3 but it will # asynchronously store the module to the backend. # 5. "none": return 404 if a module is not found and do nothing. # 6. "file:&lt;path&gt;": will point to an HCL file that specifies # any of the 5 options above based on different import paths. # 7. "custom:&lt;base64-encoded-hcl&gt;" is the same as option 6 # but the file is fully encoded in the option. This is # useful for using an environment variable in serverless # deployments. # Env override: ATHENS_DOWNLOAD_MODE DownloadMode = "sync"</code></pre> <p>通过环境变量 ATHENS_DOWNLOAD_MODE 可指定，也可以修改指定的<code>config.dev.toml</code>来配置，默认是 sync</p> <p>ATHENS_DOWNLOAD_MODE 可指定的内容：</p> <p>1、通过<code>file:&lt;path&gt;</code>指定一个 hcl 文件,里面可以对不同的仓库，设置下载模式；</p> <p>2、通过<code>custom:&lt;base64-encoded-hcl&gt;</code> 指定一个 base64 编码的 HCL 文件；</p> <p>3、指定具体的全局策略，<code>sync, async, none, redirect, or async_redirect</code>，这是一个全局的设置，上面的两种是可以定制策略组的。</p> <p>来看下具体的下载模式</p> <ul> <li> <p>sync: 通过 同步从 VCS 下载模块<code>go mod download</code>，将其持久化到存储中，并立即将其返回给用户。请注意，这是默认行为；</p> </li> <li> <p>async：向客户端返回 404，并异步下载<code>module@version</code> 并将其持久化到存储中；</p> </li> <li> <p>none：返回 404 并且什么也不做；</p> </li> <li> <p>redirect：重定向到上游代理（例如proxy.golang.org），之后什么也不做；</p> </li> <li> <p>async_redirect：重定向到上游代理（例如<code>proxy.golang.org</code>）并异步下载<code>module@version</code> 并将其持久化到存储中；</p> </li> </ul> <p>下面看下配置策略的 hcl 文件</p> <pre><code># cat download.hcl    downloadURL = "https://goproxy.cn"  mode = "async_redirect"  download "gitlab.test.com/*" {     mode = "sync" }</code></pre> <h4 id="部署">部署</h4> <p>这里使用 docker-composer 部署</p> <pre><code class="language-yaml">version: '2' services:   athens:     image: gomods/athens:v0.11.0     restart: always     container_name: athens_proxy     ports:       - "3000:3000"     volumes:       - ./.netrc:/root/.netrc       - ./athens-storage:/var/lib/athens       - ./download.hcl:/root/download.hcl     environment:       - ATHENS_NETRC_PATH=/root/.netrc       - ATHENS_STORAGE_TYPE=disk       - ATHENS_DISK_STORAGE_ROOT=/var/lib/athens       - ATHENS_GOGET_WORKERS=100       - ATHENS_DOWNLOAD_MODE=file:/root/download.hcl       - ATHENS_GONOSUM_PATTERNS=gitlab.test.com</code></pre> <p>ATHENS_GONOSUM_PATTERNS：配置为私库地址，配置的仓库地址，不会进行安全向校验。</p> <p>go 处于安全性考虑，为了保证开发者的依赖库不被人恶意劫持篡改，所以引入了 GOSUMDB 环境变量来设置校验服务器</p> <p>当你在本地对依赖进行变动（更新/添加）操作时，Go 会自动去这个服务器进行数据校验，保证你下的这个代码库和世界上其他人下的代码库是一样的。如果有问题，会有个大大的安全提示。当然背后的这些操作都已经集成在 Go 里面了，开发者不需要进行额外的操作。</p> <p>对于我们的私有仓库，去公共安全校验库校验，肯定是不能通过校验的，我们可以通过 ATHENS_GONOSUM_PATTERNS 这个环境变量来设置不做校验的代码仓库， 它可以设置多个匹配路径，用逗号相隔。</p> <p>启动<code>docker-compose up -d</code></p> <p>客户端设置代理<code>export GOPROXY=http://xxxx:3000</code></p> <p>这样就能使用我们的代理服务了</p> <p>因为选择的 ATHENS_STORAGE_TYPE 为 disk，athens 服务会在拉取资源包的同时，也会下载资源包到配置的 ATHENS_DISK_STORAGE_ROOT 中。</p> <h4 id="使用秘钥的方式认证私有仓库">使用秘钥的方式认证私有仓库</h4> <p>上面通过<code>.netrc</code> 的方式来认证私有仓库，因为账号密码是铭文的总归不太好，可以使用秘钥的方式来认证</p> <h5 id="1配置秘钥">1、配置秘钥</h5> <p>首先查看电脑有没有秘钥</p> <pre><code># cd .ssh # ls id_rsa		id_rsa.pub</code></pre> <p>没有的话通过下面的命令的生成</p> <pre><code># ssh-keygen -t rsa -C "youremail@example.com"</code></pre> <p>邮箱换成自己的，一路回车即可</p> <p>然后将<code>id_rsa.pub</code> 公钥的内容添加到自己的私有仓库中，如何添加自己 google 吧，比较简单</p> <h5 id="2配置-http-与-ssh-重写规则">2、配置 HTTP 与 SSH 重写规则</h5> <pre><code># cat gitconfig  <div class="down down-link"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://"  rel="external nofollow" target="_blank"><i class="be be-download"></i></a><div class="clear"></div></div><div class="down-line"></div>         insteadOf = https://gitlab.test.com</code></pre> <h5 id="3配置-ssh-来绕过主机-ssh-键验证">3、配置 SSH 来绕过主机 SSH 键验证</h5> <pre><code># cat config  Host gitlab.test.com Hostname gitlab.test.com StrictHostKeyChecking no IdentityFile /root/.ssh/id_rsa</code></pre> <p>将上面配置的认证信息，映射到容器中即可</p> <pre><code class="language-yaml">version: '2' services:   athens:     image: gomods/athens:v0.11.0     restart: always     container_name: athens_proxy     ports:       - "3000:3000"     volumes:       - ./athens-storage:/var/lib/athens       - ./download.hcl:/root/download.hcl       - ./gitconfig:/root/.gitconfig       - ./ssh-keys:/root/.ssh     environment:       - ATHENS_STORAGE_TYPE=disk       - ATHENS_DISK_STORAGE_ROOT=/var/lib/athens       - ATHENS_GOGET_WORKERS=100       - ATHENS_DOWNLOAD_MODE=file:/root/download.hcl       - ATHENS_GONOSUM_PATTERNS=gitlab.test.com</code></pre> <p>这样即可实现秘钥的认证了</p> <p>需要注意私钥的权限，刚开始没注意，执行报了下面的错误</p> <pre><code>        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         Permissions 0644 for '/root/.ssh/id_rsa' are too open.         It is required that your private key files are NOT accessible by others.         This private key will be ignored.         Load key "/root/.ssh/id_rsa": bad permissions         git@gitlab.test.com: Permission denied (publickey).         fatal: Could not read from remote repository.</code></pre> <p>看报错就可推断出，是权限太大了，需要私钥文件不能被其他人所访问。</p> <p>修改权限就可以了</p> <pre><code>ssh-keys # chmod 600 id_rsa</code></pre> <p>具体的 demo 地址，可参见<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/tree/master/golang/go_environment/athens"  target="_blank" rel="nofollow">athens私有代理部署</a></p> <h3 id="参考">参考</h3> <p>【介绍 ATHENS】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gomods.io/zh/intro/"  target="_blank" rel="nofollow">https://gomods.io/zh/intro/</a><br /> 【download】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/gomods/athens/blob/main/docs/content/configuration/download.md"  target="_blank" rel="nofollow">https://github.com/gomods/athens/blob/main/docs/content/configuration/download.md</a><br /> 【athens构建golang私有代理】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens%E6%9E%84%E5%BB%BAgolang%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86.md"  target="_blank" rel="nofollow">https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens构建golang私有代理.md</a><br /> 【使用 docker-compose 部署 golang 的 Athens 私有代理】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens%E6%9E%84%E5%BB%BAgolang%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86.md"  target="_blank" rel="nofollow">https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens构建golang私有代理.md</a></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-37129.htm">动物打针去哪里打好（给动物打针打哪里）</a></p>
                                        <p>下一个：<a href="/news/article-37618.htm">农大动物医院怎么样好不好挂号（农大动物医院地址和联系电话）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36631.htm" title="免费领养宠物狗套路骗局揭秘（免费领养宠物的平台是真的吗）">免费领养宠物狗套路骗局揭秘（免费领养宠物的平台是真的吗）</a></li>
                        <li class="py-2"><a href="/news/article-51046.htm" title="附近的宠物医院在哪里（附近的宠物医院宠物店）">附近的宠物医院在哪里（附近的宠物医院宠物店）</a></li>
                        <li class="py-2"><a href="/news/article-38087.htm" title="全国兽药十强企业排名（中国兽药百强企业排名）">全国兽药十强企业排名（中国兽药百强企业排名）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-19-free-high-speed-nodes.htm" title="「2月19日」最高速度18.9M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费机场订阅链接">「2月19日」最高速度18.9M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-57037.htm" title="猫粮品牌大全图片及名称（猫粮品牌排行榜及名称）">猫粮品牌大全图片及名称（猫粮品牌排行榜及名称）</a></li>
                        <li class="py-2"><a href="/news/article-37128.htm" title="动物注射给药的方法有（动物注射给药的方法有哪两种）">动物注射给药的方法有（动物注射给药的方法有哪两种）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-3-free-clash.htm" title="「3月3日」最高速度20.4M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费机场订阅链接">「3月3日」最高速度20.4M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-27-node-share.htm" title="「2月27日」最高速度18.1M/S，2025年Shadowrocket/V2ray/Clash/SSR每天更新免费机场订阅链接">「2月27日」最高速度18.1M/S，2025年Shadowrocket/V2ray/Clash/SSR每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-62834.htm" title="两个月猫抓了一下出了点血要打疫苗吗?（两个月大猫抓伤渗了一点点血）">两个月猫抓了一下出了点血要打疫苗吗?（两个月大猫抓伤渗了一点点血）</a></li>
                        <li class="py-2"><a href="/news/article-59293.htm" title="浅谈快速傅里叶变化的Matlab与Python实现与区别">浅谈快速傅里叶变化的Matlab与Python实现与区别</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container py-4">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <a href="/">V2rayNodes节点订阅站</a> 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/v2raynodes/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/v2raynodes/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>